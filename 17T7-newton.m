// phi0: 15, 1^2
// phi1: 2^6, 1^5
// phioo: 4^4, 1^1

QQ := Rationals();
R0<b,c,d0,d2,d3,e0,e1,e2,e3,e4,e5,f0,f1,f2,f3,f4,lc> := PolynomialRing(QQ,17);
R<x> := PolynomialRing(R0);

phi0 := lc*(x^2 + b);
phioo := (x^4 + d3*x^3 + d2*x^2 + x + d0)^4*(x-c);
phi1 := (-1)*(x^6 + e5*x^5 + e4*x^4 + e3*x^3 + e2*x^2 + e1*x + e0)^2*(x^5 + f4*x^4 + f3*x^3 + f2*x^2 + f1*x + f0);

eqns := Coefficients(phi0 - (phi1 + phioo));

CC<I> := ComplexField(30);
S<xCC> := PolynomialRing(CC);

/* 
phiCC_facts := [
  [
    <xCC, 15>,
    <xCC^2 + (0.2873770064756952625424833835767768184085 + 0.3191644998660571602430212597755988163072*I)*xCC - 0.03084869459810976671477851854992830431471 + 0.2935057233434238345392836658625255494355*I, 1>
  ],
  [
    <xCC^6 + (0.5077796306348918576531313403624768763505 + 0.5639464125584559114728174582468207474415*I)*xCC^5 + (-0.002819378028768600156720047392390360656671 + 0.02682459009993210978272204105235248385566*I)*xCC^4 + (0.6597663636176931669751256018453284438358 - 0.4793483217157029512554553512393860611739*I)*xCC^3 + (0.9343435906686379735974994546758040848775 + 0.1986008610509482565643720724562162228202*I)*xCC^2 + (0.2187973542568654155663642061937814705016 + 0.3789681341345374750427229737010240833856*I)*xCC - 0.04646067704406585195412936026013245249867 + 0.1429912608645376878407951419820276513800*I, 2>,
    <xCC^5 + (-0.8897588828269677479540487997667130310769 - 0.9881773504480717993391159464529131578815*I)*xCC^4 + (-0.07178595160381829033381492566526313217864 + 0.6829977062519115032171333950068441207110*I)*xCC^3 + (0.2911951564529125328357757240977610495475 - 0.2115656651122156485764441579734888530001*I)*xCC^2 + (-0.2016093894080397139414160696777273162443 - 0.04285339861296549891027453264316078376526*I)*xCC + 0.02360566361045721369257487286220355896511 + 0.04088620871969167664183198557678467843179*I, 1>
  ],
  [
    <xCC^4 + (1.672011674040408800247176049882947268020 + 1.856957090129787114141214602336820149016*I)*xCC^3 + (0.04487082850634147885785966331663640649184 - 0.4269174157722528502389580594483063141873*I)*xCC^2 + (4.592900831432875265304086153444364113492E-29 + 1.053818109334339909990382803017804833718E-29*I)*xCC + 0.4956739937567360239731380945210656435796 + 0.1053587598221798225733416287299332603606*I, 4>,
    <xCC + 0.4598032103611124200679734076365931216120 + 0.5106631997856914563888340249762550769526*I, 1>
  ]
];

phi0_facts, phi1_facts, phioo_facts := Explode(phiCC_facts);
// mob := 1/(1/f1 - 1/a)*(1/z - 1/a); // Can't do rational functions over CC in Magma :(
// phi_num_norm := Evaluate(phiCC_num, mob);
// phi_den_norm := Evaluate(phiCC_den, mob);

phiCC_facts_rev := [];
for phi_i in phiCC_facts do
  phi_i_facts_rev := [];
  for pair in phi_i do
    Append(~phi_i_facts_rev, <Reverse(pair[1]), pair[2]>);
  end for;
  Append(~phiCC_facts_rev, phi_i_facts_rev);
end for;

phiCC_0 := S!&*[pair[1]^pair[2] : pair in phiCC_facts_rev[1]];
phiCC_1 := S!&*[pair[1]^pair[2] : pair in phiCC_facts_rev[2]];
phiCC_oo := S!&*[pair[1]^pair[2] : pair in phiCC_facts_rev[3]];

lc_0 := LeadingCoefficient(phiCC_0);
lc_1 := LeadingCoefficient(phiCC_1);
lc_oo := LeadingCoefficient(phiCC_oo);
lcs := [lc_0, lc_1, lc_oo];

a := Coefficient(phiCC_num, 1);
*/


